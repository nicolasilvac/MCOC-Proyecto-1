from matplotlib.pylab import *

a=1. #ancho del dominio
b=1. #largo del dominio 
nx=6 #numero de intervalos en x
ny=6 #numero de intervalos en y
 

dx = b/nx  #discretizacion espacial en x
dy = a/ny  #discretizacion espacial en y


h=dx

if dx!= dy:
	print ("ERROR, dx es distinto a dy")
	exit(-1) #le dice al s.o que el programa fallo 

# i,j = 4,2 
# x,y = dx*i, dy*j
coords=lambda i,j : (dx*i, dy*j)
x,y =coords(4,2)

print "x=", x
print "y=", y

u_k= zeros((nx+1,ny+1), dtype =double) #dtype es el tipo de datos (double, float, int)
u_km1= zeros((nx+1,ny+1), dtype =double)

#CB escencial
u_k[0,:]=20
u_k[:,0]=20


#buena idea definir funciones que hagan el codigo expresivo 
def printbien(u):
	print u.T[Nx::-1,:]

print u_k 			#imprime con el eje e invertido
print "Arreglado:"
printbien(u_k)	#LO arregla

def imshowbien(u):
	imshow(u.T[Nx::-1,:])

figure()
imshowbien(u_k)
colorbar()
show()

#Condicion inicial
def fun_u0(x):
    return 10*exp(-(x-0.5)**2/0.1**2)
u0 = fun_u0(x)

#Creando el vector de solucion u en el tiempo o paso K
u_k = u0.copy()  #copy crea una nueva instancia del vector en me

#Condiciones de borde (esenciales)
u_k[0] = 0.
u_k[n] = 20.

#Temperatura en el tiempo K+1 t = dt * (K+1)
u_km1 = u_k.copy()

#Parametros del problema (hierro)
dt = 1.        #s
K = 79.5      #m^2/s
c = 450.       #J/Kg C
rho = 7800.    #Kg/m^3
alpha = K*dt/(c*rho*dx**2)

print "dt = ", dt
print "dx = ", dx
print "K = ", K
print "c = ", c
print "rho = ", rho
print "alpha = ", alpha

plot(x,u0,"k--")



#Loop en el tiempo
k = 0
for k in range (5000):
    t = dt*(k+1)
    print "k=", k, "t=",t
    u_k[0,:] = 0.
    u_k[:,0] = 20.
    #Loop en el espacio  i = 1... n-1  u_Km1[0] = 0  u_Km1[n] = 

for i in range(1,nx-1):
	for j in range(1,ny-1):
		nabla_u_k[i,j] = (u_k[i-1,j] + u_k[i+1,j] + u_k[i,j-1] + u_k[i, j+1] - 4*u_k[i,j])/h**2
		u_km1[i,j] = u_k[i,j] + alpha*nabla_u_k[i,j]

        	u_k = u_km1

if k % 100 == 0:
      plot (x,u_k)
        
imshowbien(u_k)

title("k ={}   t={} s".format(k, (k+1)*dt))

show()

figure(1)

imshowbien(u_k)
title()

# EL t tiene que ser muy chico, osino no se va a ver nada en el grafico
# si el dt esta fuera de mi intervalo el problema explota
